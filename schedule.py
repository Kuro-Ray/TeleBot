import os
from functools import lru_cache
from cryptography.fernet import Fernet
from dotenv import load_dotenv
from thefuzz import fuzz

load_dotenv()

BASE_DIR: str = os.path.dirname(os.path.abspath(__file__))
data_path: str = os.path.join(BASE_DIR, "DATA", "schedule.txt.crypt")
fernet = Fernet(os.environ["SECRET_KEY"])

@lru_cache(maxsize=16)
def employee_infos(query: str) -> str:
    """–°–æ–∑–¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"""
    found_info: list = []
    message_body: str = "<b>üîé –í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª:</b>\n\n"

    with open(file=data_path, mode="rb") as data_file:
        stream = data_file.read()
        decrypted_data = fernet.decrypt(stream).decode().strip()
        employees: list = decrypted_data.split("\n\n")
        for employee in employees:
            if fuzz.partial_ratio(query.lower(), employee.lower()) > 90:
                found_info.append(employee)

    if not found_info:
        return "üòï –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!\n–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ —Å –¥—Ä—É–≥–∏–º –∑–∞–ø—Ä–æ—Å–æ–º?\n–í–≤–µ–¥–∏—Ç–µ /sched"
    if len(found_info) > 4:
        return (
            f"üòï <b>'{query}' –Ω–∞–π–¥–µ–Ω –≤ {len(found_info)} –º–µ—Å—Ç–µ!"
            "</b>\n–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã —Å—É–∑–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å?\n–í–≤–µ–¥–∏—Ç–µ /sched"
        )
    for info in found_info:
        message_body += f"{info}\n\n"

    return message_body + "\n\n<b>–•–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –∫—É—Ä—Å–∞? –í–≤–µ–¥–∏—Ç–µ /sched</b>\n<b>–í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é.</b>"